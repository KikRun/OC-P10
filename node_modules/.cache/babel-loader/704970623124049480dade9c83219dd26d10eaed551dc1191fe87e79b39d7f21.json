{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nlet state = {\n  token: null,\n  user: {\n    email: null,\n    firstName: null,\n    lastName: null,\n    userName: null,\n    id: null\n  }\n};\nexport function setToken(token) {\n  return {\n    type: \"SET_TOKEN\",\n    payload: token\n  };\n}\nexport function setProfile({\n  email,\n  firstName,\n  lastName,\n  userName,\n  id\n}) {\n  return {\n    type: \"SET_PROFILE\",\n    payload: {\n      email,\n      firstName,\n      lastName,\n      userName,\n      id\n    }\n  };\n}\nconst reducer = (currentState, action) => {\n  switch (action.type) {\n    // case \"ADD_PRODUCT\":\n    //   const listWithNewProduct = [...currentState.list, action.payload];\n    //   return { ...currentState, list: listWithNewProduct };\n    // case \"REMOVE_PRODUCT\":\n    //   const list = currentState.list.filter((item, index) => index !== action.payload);\n    //   return { ...currentState, list: list };\n    // case \"APPLY_VOUCHER\":\n    //   const withVoucherList = currentState.list.map((item) => (item.title === \"Super Crémeux\" ? { ...item, price: action.payload.price } : item));\n    //   return { ...currentState, list: withVoucherList };\n    case \"SET_PROFILE\":\n      return {\n        ...currentState,\n        user: {\n          ...action.payload\n        }\n      };\n    case \"SET_TOKEN\":\n      return {\n        ...currentState,\n        token: action.payload\n      };\n    case \"CHECK_USERNAME\":\n      const username = {\n        ...currentState.username,\n        username: action.payload\n      };\n      return {\n        ...currentState,\n        username\n      };\n    case \"CHECK_PASSWORD\":\n      const password = {\n        ...currentState.password,\n        password: action.payload\n      };\n      return {\n        ...currentState,\n        password\n      };\n    case \"UPDATE_FIRSTNAME\":\n      const owner = {\n        ...currentState.owner,\n        firstName: action.payload\n      };\n      return {\n        ...currentState,\n        owner\n      };\n    default:\n      return currentState;\n  }\n};\nexport const store = configureStore({\n  preloadedState: state,\n  reducer\n});","map":{"version":3,"names":["configureStore","state","token","user","email","firstName","lastName","userName","id","setToken","type","payload","setProfile","reducer","currentState","action","username","password","owner","store","preloadedState"],"sources":["C:/Users/conja/Workflow/OC-P10/ArgentBank-Frontend/argent-bank-app/src/app/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nlet state = {\r\n  token: null,\r\n  user: {\r\n    email: null,\r\n    firstName: null,\r\n    lastName: null,\r\n    userName: null,\r\n    id: null,\r\n  },\r\n};\r\n\r\nexport function setToken(token) {\r\n  return {\r\n    type: \"SET_TOKEN\",\r\n    payload: token,\r\n  };\r\n}\r\n\r\nexport function setProfile({ email, firstName, lastName, userName, id }) {\r\n  return {\r\n    type: \"SET_PROFILE\",\r\n    payload: {\r\n      email,\r\n      firstName,\r\n      lastName,\r\n      userName,\r\n      id,\r\n    },\r\n  };\r\n}\r\n\r\nconst reducer = (currentState, action) => {\r\n  switch (action.type) {\r\n    // case \"ADD_PRODUCT\":\r\n    //   const listWithNewProduct = [...currentState.list, action.payload];\r\n    //   return { ...currentState, list: listWithNewProduct };\r\n    // case \"REMOVE_PRODUCT\":\r\n    //   const list = currentState.list.filter((item, index) => index !== action.payload);\r\n    //   return { ...currentState, list: list };\r\n    // case \"APPLY_VOUCHER\":\r\n    //   const withVoucherList = currentState.list.map((item) => (item.title === \"Super Crémeux\" ? { ...item, price: action.payload.price } : item));\r\n    //   return { ...currentState, list: withVoucherList };\r\n    case \"SET_PROFILE\":\r\n      return { ...currentState, user: { ...action.payload } };\r\n\r\n    case \"SET_TOKEN\":\r\n      return { ...currentState, token: action.payload };\r\n\r\n    case \"CHECK_USERNAME\":\r\n      const username = { ...currentState.username, username: action.payload };\r\n      return { ...currentState, username };\r\n\r\n    case \"CHECK_PASSWORD\":\r\n      const password = { ...currentState.password, password: action.payload };\r\n      return { ...currentState, password };\r\n\r\n    case \"UPDATE_FIRSTNAME\":\r\n      const owner = { ...currentState.owner, firstName: action.payload };\r\n      return { ...currentState, owner };\r\n    default:\r\n      return currentState;\r\n  }\r\n};\r\n\r\nexport const store = configureStore({\r\n  preloadedState: state,\r\n  reducer,\r\n});\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,IAAIC,KAAK,GAAG;EACVC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE;IACJC,KAAK,EAAE,IAAI;IACXC,SAAS,EAAE,IAAI;IACfC,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE,IAAI;IACdC,EAAE,EAAE;EACN;AACF,CAAC;AAED,OAAO,SAASC,QAAQA,CAACP,KAAK,EAAE;EAC9B,OAAO;IACLQ,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAET;EACX,CAAC;AACH;AAEA,OAAO,SAASU,UAAUA,CAAC;EAAER,KAAK;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAG,CAAC,EAAE;EACvE,OAAO;IACLE,IAAI,EAAE,aAAa;IACnBC,OAAO,EAAE;MACPP,KAAK;MACLC,SAAS;MACTC,QAAQ;MACRC,QAAQ;MACRC;IACF;EACF,CAAC;AACH;AAEA,MAAMK,OAAO,GAAGA,CAACC,YAAY,EAAEC,MAAM,KAAK;EACxC,QAAQA,MAAM,CAACL,IAAI;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGI,YAAY;QAAEX,IAAI,EAAE;UAAE,GAAGY,MAAM,CAACJ;QAAQ;MAAE,CAAC;IAEzD,KAAK,WAAW;MACd,OAAO;QAAE,GAAGG,YAAY;QAAEZ,KAAK,EAAEa,MAAM,CAACJ;MAAQ,CAAC;IAEnD,KAAK,gBAAgB;MACnB,MAAMK,QAAQ,GAAG;QAAE,GAAGF,YAAY,CAACE,QAAQ;QAAEA,QAAQ,EAAED,MAAM,CAACJ;MAAQ,CAAC;MACvE,OAAO;QAAE,GAAGG,YAAY;QAAEE;MAAS,CAAC;IAEtC,KAAK,gBAAgB;MACnB,MAAMC,QAAQ,GAAG;QAAE,GAAGH,YAAY,CAACG,QAAQ;QAAEA,QAAQ,EAAEF,MAAM,CAACJ;MAAQ,CAAC;MACvE,OAAO;QAAE,GAAGG,YAAY;QAAEG;MAAS,CAAC;IAEtC,KAAK,kBAAkB;MACrB,MAAMC,KAAK,GAAG;QAAE,GAAGJ,YAAY,CAACI,KAAK;QAAEb,SAAS,EAAEU,MAAM,CAACJ;MAAQ,CAAC;MAClE,OAAO;QAAE,GAAGG,YAAY;QAAEI;MAAM,CAAC;IACnC;MACE,OAAOJ,YAAY;EACvB;AACF,CAAC;AAED,OAAO,MAAMK,KAAK,GAAGnB,cAAc,CAAC;EAClCoB,cAAc,EAAEnB,KAAK;EACrBY;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}